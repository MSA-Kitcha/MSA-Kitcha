services:
  config-server:
    image: minjooong/msa-kitcha-config-server
    build:
      context: https://github.com/MSA-Kitcha/MSA-Kitcha-BE.git
      dockerfile: Config-server/Dockerfile
    container_name: config-server
    networks:
      - kitcha_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8071/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "8071:8071"
    expose:
      - "8071"
    restart: on-failure

  eureka:
    image: minjooong/msa-kitcha-eureka
    build:
      context: https://github.com/MSA-Kitcha/MSA-Kitcha-BE.git
      dockerfile: eureka/Dockerfile
    container_name: eureka
    networks:
      - kitcha_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_healthy
    restart: on-failure

  gateway-server:
    image: minjooong/msa-kitcha-gateway-server
    build:
      context: https://github.com/MSA-Kitcha/MSA-Kitcha-BE.git
      dockerfile: API-Gateway/Dockerfile
    environment:
      TOKEN_SECRET: ${TOKEN_SECRET}
      FRONTEND_SERVER: ${FRONTEND_SERVER}
    container_name: gateway-server
    networks:
      - kitcha_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8072/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "8072:8072"
    depends_on:
      config-server:
        condition: service_healthy
    restart: on-failure

volumes:
  mysql_data:

networks:
  kitcha_network:
